<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hassdata.hserp.dao.HumanEmpMapper">
  <resultMap id="BaseResultMap" type="com.hassdata.hserp.po.HumanEmp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="headimage" jdbcType="VARCHAR" property="headimage" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="practice_time" jdbcType="TIMESTAMP" property="practiceTime" />
    <result column="regul_time" jdbcType="TIMESTAMP" property="regulTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="human_empColumns">
    <![CDATA[ id,name,headimage,sex,tel,id_card,education,dept_id,salary,practice_time,regul_time,status ]]>
  </sql>
  <sql id="human_empDynamicWhere">
    <where>
      <if test="null != id and '' !=  id">and id = #{ id}</if>
      <if test="null != name and '' !=  name">and name = #{ name}</if>
      <if test="null != headimage and '' !=  headimage">and headimage = #{ headimage}</if>
      <if test="null != sex and '' !=  sex">and sex = #{ sex}</if>
      <if test="null != tel and '' !=  tel">and tel = #{ tel}</if>
      <if test="null != idCard and '' !=  idCard">and id_card = #{ idCard}</if>
      <if test="null != education and '' !=  education">and education = #{ education}</if>
      <if test="null != deptId and '' !=  deptId">and dept_id = #{ deptId}</if>
      <if test="null != salary and '' !=  salary">and salary = #{ salary}</if>
      <if test="null != practiceTime and '' !=  practiceTime">and practice_time = #{ practiceTime}</if>
      <if test="null != regulTime and '' !=  regulTime">and regul_time = #{ regulTime}</if>
      <if test="null != status and '' !=  status">and status = #{ status}</if>
	</where>
  </sql>
  <sql id="human_empDynamicLikeWhere">
    <where>
      <if test="null != id and '' !=  id">and id LIKE #{ id}</if>
      <if test="null != name and '' !=  name">and name LIKE #{ name}</if>
      <if test="null != headimage and '' !=  headimage">and headimage LIKE #{ headimage}</if>
      <if test="null != sex and '' !=  sex">and sex LIKE #{ sex}</if>
      <if test="null != tel and '' !=  tel">and tel LIKE #{ tel}</if>
      <if test="null != idCard and '' !=  idCard">and id_card LIKE #{ idCard}</if>
      <if test="null != education and '' !=  education">and education LIKE #{ education}</if>
      <if test="null != deptId and '' !=  deptId">and dept_id LIKE #{ deptId}</if>
      <if test="null != salary and '' !=  salary">and salary LIKE #{ salary}</if>
      <if test="null != practiceTime and '' !=  practiceTime">and practice_time LIKE #{ practiceTime}</if>
      <if test="null != regulTime and '' !=  regulTime">and regul_time LIKE #{ regulTime}</if>
      <if test="null != status and '' !=  status">and status LIKE #{ status}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="human_empColumns" /> from  human_emp where id = #{id}
  </select>
  <select id="getOne" parameterType="com.hassdata.hserp.po.HumanEmp" resultMap="BaseResultMap">
    select <include refid="human_empColumns" /> from  human_emp <include refid="human_empDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="human_empColumns" /> from  human_emp <include refid="human_empDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="human_empColumns" /> from  human_emp <include refid="human_empDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="human_empColumns" /> from  human_emp <include refid="human_empDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.hassdata.hserp.po.HumanEmp" resultType="java.lang.Long">
    select count(1) from human_emp <include refid="human_empDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.hassdata.hserp.po.HumanEmp" resultType="java.lang.Long">
    select count(1) from human_emp <include refid="human_empDynamicWhere" />
  </select>
  <sql id="save_human_emp_columns">
    insert into human_emp(
		name ,headimage ,sex ,tel ,id_card ,education ,dept_id ,salary ,practice_time ,regul_time ,status
	) values
  </sql>
  <sql id="save_human_emp_values">
    (
	  #{ name,jdbcType=VARCHAR},
	  #{ headimage,jdbcType=VARCHAR},
	  #{ sex,jdbcType=BIT},
	  #{ tel,jdbcType=VARCHAR},
	  #{ idCard,jdbcType=VARCHAR},
	  #{ education,jdbcType=VARCHAR},
	  #{ deptId,jdbcType=INTEGER},
	  #{ salary,jdbcType=DECIMAL},
	  #{ practiceTime,jdbcType=TIMESTAMP},
	  #{ regulTime,jdbcType=TIMESTAMP},
	  #{ status,jdbcType=INTEGER}
	)
  </sql>
  <insert id="save" keyProperty="id" parameterType="com.hassdata.hserp.po.HumanEmp" useGeneratedKeys="true">
    <include refid="save_human_emp_columns" /><include refid="save_human_emp_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_human_emp_columns" /><include refid="save_human_emp_values" />
	</foreach>
  </insert>
  <sql id="human_empUpdate">
    update human_emp 
	<set> 
      <if test="null != name">name = #{ name,jdbcType=VARCHAR},</if>
      <if test="null != headimage">headimage = #{ headimage,jdbcType=VARCHAR},</if>
      <if test="null != sex">sex = #{ sex,jdbcType=BIT},</if>
      <if test="null != tel">tel = #{ tel,jdbcType=VARCHAR},</if>
      <if test="null != idCard">id_card = #{ idCard,jdbcType=VARCHAR},</if>
      <if test="null != education">education = #{ education,jdbcType=VARCHAR},</if>
      <if test="null != deptId">dept_id = #{ deptId,jdbcType=INTEGER},</if>
      <if test="null != salary">salary = #{ salary,jdbcType=DECIMAL},</if>
      <if test="null != practiceTime">practice_time = #{ practiceTime,jdbcType=TIMESTAMP},</if>
      <if test="null != regulTime">regul_time = #{ regulTime,jdbcType=TIMESTAMP},</if>
      <if test="null != status">status = #{ status,jdbcType=INTEGER}</if>
	</set>
	where id = #{id}
  </sql>
  <update id="update" parameterType="com.hassdata.hserp.po.HumanEmp">
    <include refid="human_empUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="human_empUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from human_emp where id = #{id} ]]>
  </delete>
  <delete id="delArray">
    delete from human_emp where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from human_emp where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>