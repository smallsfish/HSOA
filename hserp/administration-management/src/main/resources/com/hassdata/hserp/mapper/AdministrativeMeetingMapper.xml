<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hassdata.hserp.dao.AdministrativeMeetingMapper">
  <resultMap id="BaseResultMap" type="com.hassdata.hserp.po.AdministrativeMeeting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="participate_number" jdbcType="VARCHAR" property="participateNumber" />
    <result column="shouldparticipate_number" jdbcType="VARCHAR" property="shouldparticipateNumber" />
    <result column="realparticipate_number" jdbcType="VARCHAR" property="realparticipateNumber" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="VARCHAR" property="time" />
  </resultMap>
  <sql id="administrative_meetingColumns">
    <![CDATA[ id,participate_number,shouldparticipate_number,realparticipate_number,content,time ]]>
  </sql>
  <sql id="administrative_meetingDynamicWhere">
    <where>
      <if test="null != id and '' !=  id">and id = #{ id}</if>
      <if test="null != participateNumber and '' !=  participateNumber">and participate_number = #{ participateNumber}</if>
      <if test="null != shouldparticipateNumber and '' !=  shouldparticipateNumber">and shouldparticipate_number = #{ shouldparticipateNumber}</if>
      <if test="null != realparticipateNumber and '' !=  realparticipateNumber">and realparticipate_number = #{ realparticipateNumber}</if>
      <if test="null != content and '' !=  content">and content = #{ content}</if>
      <if test="null != time and '' !=  time">and time = #{ time}</if>
	</where>
  </sql>
  <sql id="administrative_meetingDynamicLikeWhere">
    <where>
      <if test="null != id and '' !=  id">and id LIKE #{ id}</if>
      <if test="null != participateNumber and '' !=  participateNumber">and participate_number LIKE #{ participateNumber}</if>
      <if test="null != shouldparticipateNumber and '' !=  shouldparticipateNumber">and shouldparticipate_number LIKE #{ shouldparticipateNumber}</if>
      <if test="null != realparticipateNumber and '' !=  realparticipateNumber">and realparticipate_number LIKE #{ realparticipateNumber}</if>
      <if test="null != content and '' !=  content">and content LIKE #{ content}</if>
      <if test="null != time and '' !=  time">and time LIKE #{ time}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="administrative_meetingColumns" /> from  administrative_meeting where id = #{id}
  </select>
  <select id="getOne" parameterType="com.hassdata.hserp.po.AdministrativeMeeting" resultMap="BaseResultMap">
    select <include refid="administrative_meetingColumns" /> from  administrative_meeting <include refid="administrative_meetingDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="administrative_meetingColumns" /> from  administrative_meeting <include refid="administrative_meetingDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="administrative_meetingColumns" /> from  administrative_meeting <include refid="administrative_meetingDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="administrative_meetingColumns" /> from  administrative_meeting <include refid="administrative_meetingDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.hassdata.hserp.po.AdministrativeMeeting" resultType="java.lang.Long">
    select count(1) from administrative_meeting <include refid="administrative_meetingDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.hassdata.hserp.po.AdministrativeMeeting" resultType="java.lang.Long">
    select count(1) from administrative_meeting <include refid="administrative_meetingDynamicWhere" />
  </select>
  <sql id="save_administrative_meeting_columns">
    insert into administrative_meeting(
		participate_number ,shouldparticipate_number ,realparticipate_number ,content ,time
	) values
  </sql>
  <sql id="save_administrative_meeting_values">
    (
	  #{ participateNumber,jdbcType=VARCHAR},
	  #{ shouldparticipateNumber,jdbcType=VARCHAR},
	  #{ realparticipateNumber,jdbcType=VARCHAR},
	  #{ content,jdbcType=VARCHAR},
	  #{ time,jdbcType=VARCHAR}
	)
  </sql>
  <insert id="save" keyProperty="id" parameterType="com.hassdata.hserp.po.AdministrativeMeeting" useGeneratedKeys="true">
    <include refid="save_administrative_meeting_columns" /><include refid="save_administrative_meeting_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_administrative_meeting_columns" /><include refid="save_administrative_meeting_values" />
	</foreach>
  </insert>
  <sql id="administrative_meetingUpdate">
    update administrative_meeting 
	<set> 
      <if test="null != participateNumber">participate_number = #{ participateNumber,jdbcType=VARCHAR},</if>
      <if test="null != shouldparticipateNumber">shouldparticipate_number = #{ shouldparticipateNumber,jdbcType=VARCHAR},</if>
      <if test="null != realparticipateNumber">realparticipate_number = #{ realparticipateNumber,jdbcType=VARCHAR},</if>
      <if test="null != content">content = #{ content,jdbcType=VARCHAR},</if>
      <if test="null != time">time = #{ time,jdbcType=VARCHAR}</if>
	</set>
	where id = #{id}
  </sql>
  <update id="update" parameterType="com.hassdata.hserp.po.AdministrativeMeeting">
    <include refid="administrative_meetingUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="administrative_meetingUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from administrative_meeting where id = #{id} ]]>
  </delete>
  <delete id="delArray">
    delete from administrative_meeting where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from administrative_meeting where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>