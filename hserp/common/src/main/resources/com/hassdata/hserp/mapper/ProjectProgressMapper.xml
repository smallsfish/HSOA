<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hassdata.hserp.dao.ProjectProgressMapper">
  <resultMap id="BaseResultMap" type="com.hassdata.hserp.po.ProjectProgress">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="precend" jdbcType="TINYINT" property="precend" />
    <result column="descript" jdbcType="LONGVARCHAR" property="descript" />
  </resultMap>
  <sql id="project_progressColumns">
    <![CDATA[ id,pid,cid,precend,descript ]]>
  </sql>
  <sql id="project_progressDynamicWhere">
    <where>
      <if test="null != id and '' !=  id">and id = #{ id}</if>
      <if test="null != pid and '' !=  pid">and pid = #{ pid}</if>
      <if test="null != cid and '' !=  cid">and cid = #{ cid}</if>
      <if test="null != precend and '' !=  precend">and precend = #{ precend}</if>
      <if test="null != descript and '' !=  descript">and descript = #{ descript}</if>
	</where>
  </sql>
  <sql id="project_progressDynamicLikeWhere">
    <where>
      <if test="null != id and '' !=  id">and id LIKE #{ id}</if>
      <if test="null != pid and '' !=  pid">and pid LIKE #{ pid}</if>
      <if test="null != cid and '' !=  cid">and cid LIKE #{ cid}</if>
      <if test="null != precend and '' !=  precend">and precend LIKE #{ precend}</if>
      <if test="null != descript and '' !=  descript">and descript LIKE #{ descript}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="project_progressColumns" /> from  project_progress where id = #{id}
  </select>
  <select id="getOne" parameterType="com.hassdata.hserp.po.ProjectProgress" resultMap="BaseResultMap">
    select <include refid="project_progressColumns" /> from  project_progress <include refid="project_progressDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_progressColumns" /> from  project_progress <include refid="project_progressDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_progressColumns" /> from  project_progress <include refid="project_progressDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_progressColumns" /> from  project_progress <include refid="project_progressDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.hassdata.hserp.po.ProjectProgress" resultType="java.lang.Long">
    select count(1) from project_progress <include refid="project_progressDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.hassdata.hserp.po.ProjectProgress" resultType="java.lang.Long">
    select count(1) from project_progress <include refid="project_progressDynamicWhere" />
  </select>
  <sql id="save_project_progress_columns">
    insert into project_progress(
		pid ,cid ,precend ,descript
	) values
  </sql>
  <sql id="save_project_progress_values">
    (
	  #{ pid,jdbcType=INTEGER},
	  #{ cid,jdbcType=INTEGER},
	  #{ precend,jdbcType=TINYINT},
	  #{ descript,jdbcType=LONGVARCHAR}
	)
  </sql>
  <insert id="save" keyProperty="id" parameterType="com.hassdata.hserp.po.ProjectProgress" useGeneratedKeys="true">
    <include refid="save_project_progress_columns" /><include refid="save_project_progress_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_project_progress_columns" /><include refid="save_project_progress_values" />
	</foreach>
  </insert>
  <sql id="project_progressUpdate">
    update project_progress 
	<set> 
      <if test="null != pid">pid = #{ pid,jdbcType=INTEGER},</if>
      <if test="null != cid">cid = #{ cid,jdbcType=INTEGER},</if>
      <if test="null != precend">precend = #{ precend,jdbcType=TINYINT},</if>
      <if test="null != descript">descript = #{ descript,jdbcType=LONGVARCHAR}</if>
	</set>
	where id = #{id}
  </sql>
  <update id="update" parameterType="com.hassdata.hserp.po.ProjectProgress">
    <include refid="project_progressUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="project_progressUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from project_progress where id = #{id} ]]>
  </delete>
  <delete id="delArray">
    delete from project_progress where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from project_progress where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>