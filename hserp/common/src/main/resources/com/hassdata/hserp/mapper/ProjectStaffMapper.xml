<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hassdata.hserp.dao.ProjectStaffMapper">
  <resultMap id="BaseResultMap" type="com.hassdata.hserp.po.ProjectStaff">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="project_staff_module" jdbcType="VARCHAR" property="projectStaffModule" />
  </resultMap>
  <sql id="project_staffColumns">
    <![CDATA[ id,pid,sid,project_staff_module ]]>
  </sql>
  <sql id="project_staffDynamicWhere">
    <where>
      <if test="null != id and '' !=  id">and id = #{ id}</if>
      <if test="null != pid and '' !=  pid">and pid = #{ pid}</if>
      <if test="null != sid and '' !=  sid">and sid = #{ sid}</if>
      <if test="null != projectStaffModule and '' !=  projectStaffModule">and project_staff_module = #{ projectStaffModule}</if>
	</where>
  </sql>
  <sql id="project_staffDynamicLikeWhere">
    <where>
      <if test="null != id and '' !=  id">and id LIKE #{ id}</if>
      <if test="null != pid and '' !=  pid">and pid LIKE #{ pid}</if>
      <if test="null != sid and '' !=  sid">and sid LIKE #{ sid}</if>
      <if test="null != projectStaffModule and '' !=  projectStaffModule">and project_staff_module LIKE #{ projectStaffModule}</if>
	</where>
  </sql>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="project_staffColumns" /> from  project_staff where id = #{id}
  </select>
  <select id="getOne" parameterType="com.hassdata.hserp.po.ProjectStaff" resultMap="BaseResultMap">
    select <include refid="project_staffColumns" /> from  project_staff <include refid="project_staffDynamicWhere" /> limit 0 , 1
  </select>
  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_staffColumns" /> from  project_staff <include refid="project_staffDynamicWhere" />
	<if test="orderBy != null and orderBy != ''">
          order by ${orderBy}
      </if>
  </select>
  <select id="listPage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_staffColumns" /> from  project_staff <include refid="project_staffDynamicWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="listLikePage" parameterType="map" resultMap="BaseResultMap">
    select <include refid="project_staffColumns" /> from  project_staff <include refid="project_staffDynamicLikeWhere" />
	<if test="orderBy != null">
            order by ${orderBy}
        </if>
        <if test="fromIndex != null and fromIndex > -1 and pageSize != null and pageSize > 0">
            limit #{fromIndex},#{pageSize}
        </if>
  </select>
  <select id="countLike" parameterType="com.hassdata.hserp.po.ProjectStaff" resultType="java.lang.Long">
    select count(1) from project_staff <include refid="project_staffDynamicLikeWhere" />
  </select>
  <select id="count" parameterType="com.hassdata.hserp.po.ProjectStaff" resultType="java.lang.Long">
    select count(1) from project_staff <include refid="project_staffDynamicWhere" />
  </select>
  <sql id="save_project_staff_columns">
    insert into project_staff(
		pid ,sid ,project_staff_module
	) values
  </sql>
  <sql id="save_project_staff_values">
    (
	  #{ pid,jdbcType=INTEGER},
	  #{ sid,jdbcType=INTEGER},
	  #{ projectStaffModule,jdbcType=VARCHAR}
	)
  </sql>
  <insert id="save" keyProperty="id" parameterType="com.hassdata.hserp.po.ProjectStaff" useGeneratedKeys="true">
    <include refid="save_project_staff_columns" /><include refid="save_project_staff_values" />
  </insert>
  <insert id="batchSave" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="save_project_staff_columns" /><include refid="save_project_staff_values" />
	</foreach>
  </insert>
  <sql id="project_staffUpdate">
    update project_staff 
	<set> 
      <if test="null != pid">pid = #{ pid,jdbcType=INTEGER},</if>
      <if test="null != sid">sid = #{ sid,jdbcType=INTEGER},</if>
      <if test="null != projectStaffModule">project_staff_module = #{ projectStaffModule,jdbcType=VARCHAR}</if>
	</set>
	where id = #{id}
  </sql>
  <update id="update" parameterType="com.hassdata.hserp.po.ProjectStaff">
    <include refid="project_staffUpdate" />
  </update>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="project_staffUpdate" />
	</foreach>
  </update>
  <delete id="delById">
    <![CDATA[ delete from project_staff where id = #{id} ]]>
  </delete>
  <delete id="delArray">
    delete from project_staff where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="delList">
    delete from project_staff where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
</mapper>